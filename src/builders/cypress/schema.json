{
  "title": "Cypress Target",
  "description": "Cypress target option for Build Facade",
  "type": "object",
  "properties": {
    "baseUrl": {
      "type": "string",
      "description": "Use this to pass directly the address of your distant server address with the port running your application"
    },
    "configPath": {
      "type": "string",
      "description": "The path to the cypress configuration that should be used."
    },
    "browser": {
      "type": "string",
      "description": "The browser to run tests in.",
      "enum": ["electron", "chrome", "chromium", "canary"]
    },
    "devServerTarget": {
      "type": "string",
      "description": "Dev server target to run tests against."
    },
    "env": {
      "type": "object",
      "description": "A key-value Pair of environment variables to pass to Cypress runner"
    },
    "exit": {
      "type": "boolean",
      "description": "Whether or not the Cypress Test Runner will stay open after running tests in a spec file",
      "default": true
    },
    "headless": {
      "type": "boolean",
      "description": "Whether or not to open the Cypress application to run the tests. If set to 'true', will run in headless mode",
      "default": false
    },
    "key": {
      "type": "string",
      "description": "The key cypress should use to run tests in parallel/record the run (CI only)"
    },
    "parallel": {
      "type": "boolean",
      "description": "Whether or not Cypress should run its tests in parallel (CI only)",
      "default": false
    },
    "record": {
      "type": "boolean",
      "description": "Whether or not Cypress should record the results of the tests",
      "default": false
    },
    "spec": {
      "type": "string",
      "description": "A comma delimited glob string that is provided to the Cypress runner to specify which spec files to run. i.e. '**examples/**,**actions.spec**"
    },
    "tsConfig": {
      "type": "string",
      "description": "The path of the Cypress tsconfig configuration json file."
    },
    "watch": {
      "type": "boolean",
      "description": "Recompile and run tests when files change.",
      "default": false
    }
  },
  "additionalProperties": false
}
